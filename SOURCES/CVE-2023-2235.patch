From 00820f88fd6db36b2d3182e565a6adc75d14be69 Mon Sep 17 00:00:00 2001
From: Ryan Sullivan <rysulliv@redhat.com>
Date: Thu, 18 May 2023 13:50:48 -0400
Subject: [KPATCH CVE-2023-2235] kpatch fixes for CVE-2023-2235

Kernels:
5.14.0-284.11.1.el9_2


Kpatch-MR: https://gitlab.com/redhat/prdsc/rhel/src/kpatch/rhel-9/-/merge_requests/34
Approved-by: Yannick Cote (@ycote1)
Approved-by: Joe Lawrence (@joe.lawrence)
Changes since last build:
arches: x86_64 ppc64le
core.o: changed function: perf_group_detach
nf_tables_api.o: changed function: nf_tables_deactivate_set
nf_tables_api.o: new function: nf_tables_activate_set
nft_dynset.o: changed function: nft_dynset_activate
nft_lookup.o: changed function: nft_lookup_activate
nft_objref.o: changed function: nft_objref_map_activate
---------------------------

Modifications:
Adds __attribute__((optimize("-fno-optimize-sibling-calls"))) to the
following function definitions:
    - perf_group_detach()

commit bf07af2a701756e65589e0dd066d2d47f0153065
Author: Michael Petlan <mpetlan@redhat.com>
Date:   Mon May 15 18:23:04 2023 +0200

    perf: Fix check before add_event_to_groups() in perf_group_detach()

    Bugzilla: https://bugzilla.redhat.com/2192659
    CVE: CVE-2023-2235
    Y-Commit: 0734d0b239b5dabdc40c10f3eb28d6a07d5d74a4

    O-Bugzilla: https://bugzilla.redhat.com/2192660

    O-CVE: CVE-2023-2235

    upstream
    ========
    commit fd0815f632c24878e325821943edccc7fde947a2
    Author: Budimir Markovic <markovicbudimir@gmail.com>
    Date:   Wed Mar 15 00:29:01 2023 -0700

    description
    ===========
    Events should only be added to a groups rb tree if they have not been
    removed from their context by list_del_event(). Since remove_on_exec
    made it possible to call list_del_event() on individual events before
    they are detached from their group, perf_group_detach() should check each
    sibling's attach_state before calling add_event_to_groups() on it.

    Fixes: 2e498d0a74e5 ("perf: Add support for event removal on exec")

        Signed-off-by: Budimir Markovic <markovicbudimir@gmail.com>
        Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
        Link: https://lkml.kernel.org/r/ZBFzvQV9tEqoHEtH@gentoo

    Signed-off-by: Michael Petlan <mpetlan@redhat.com>
    Signed-off-by: Herton R. Krzesinski <herton@redhat.com>

Signed-off-by: Ryan Sullivan <rysulliv@redhat.com>
---
 kernel/events/core.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/kernel/events/core.c b/kernel/events/core.c
index 5e6033904282..fbe2f3d1f6f7 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -2126,6 +2126,7 @@ static inline void perf_remove_sibling_event(struct perf_event *event)
 	perf_event_set_state(event, PERF_EVENT_STATE_ERROR);
 }
 
+__attribute__((optimize("-fno-optimize-sibling-calls")))
 static void perf_group_detach(struct perf_event *event)
 {
 	struct perf_event *leader = event->group_leader;
@@ -2169,7 +2170,7 @@ static void perf_group_detach(struct perf_event *event)
 		/* Inherit group flags from the previous leader */
 		sibling->group_caps = event->group_caps;
 
-		if (!RB_EMPTY_NODE(&event->group_node)) {
+		if (sibling->attach_state & PERF_ATTACH_CONTEXT) {
 			add_event_to_groups(sibling, event->ctx);
 
 			if (sibling->state == PERF_EVENT_STATE_ACTIVE)
-- 
2.39.2


